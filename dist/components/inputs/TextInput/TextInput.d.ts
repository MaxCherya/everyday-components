import React, { type ReactNode } from "react";
export interface TextInputProps {
    value?: string;
    onChange?: (e: any) => void;
    placeholder?: string;
    name?: string;
    id?: string;
    variant?: 'default' | 'outlined' | 'filled' | 'lowBorder' | 'sideBorders' | 'topBorder';
    size?: 'xs' | 'sm' | 'base' | 'md' | 'lg' | 'xl' | 'custom';
    fullWidth?: boolean;
    disabled?: boolean;
    readonly?: boolean;
    autoFocus?: boolean;
    regex?: RegExp;
    onFocus?: () => void;
    onUnfocus?: () => void;
    customPrimaryColor?: string;
    customSecondaryColor?: string;
    label?: string | React.ReactNode;
    required?: boolean;
    hint?: string;
    hintPosition?: 'top' | 'bottom';
    labelPosition?: 'top' | 'bottom';
    error?: string;
    setError?: React.Dispatch<React.SetStateAction<string>>;
    errorColor?: string;
    errorPosition?: 'top' | 'bottom';
    debounceMs?: number;
    iconLeft?: ReactNode | string;
    iconRight?: ReactNode | string;
    onLeftIconClick?: () => void;
    onRightIconClick?: () => void;
    autoComplete?: 'on' | 'off';
    className?: string;
    classNameHint?: string;
    classNameLabel?: string;
    inputClassName?: string;
    iconLeftClassName?: string;
    iconRightClassName?: string;
    customRequiredMessage?: string;
    customRegexMessage?: string;
}
declare const TextInput: React.FC<TextInputProps>;
export default TextInput;
